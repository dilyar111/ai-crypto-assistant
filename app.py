import time
import streamlit as st
from assistant.query_handler import extract_token_name
from assistant.data_fetcher import get_news, get_price, get_market_data
from assistant.response_generator import generate_response

st.set_page_config(page_title="üß† AI Crypto Assistant")
st.title("üß† AI Crypto Assistant")

query = st.text_input("Ask about a cryptocurrency (e.g., 'Tell me about Ethereum')")

if query:
    with st.spinner("Analyzing query..."):
        token = extract_token_name(query)
        st.write(f"üîç Token extracted: {token}")

        try:
            start = time.time()
            st.write("‚è≥ Fetching news...")
            news = get_news(token)
            st.write(f"‚úÖ News fetched in {time.time() - start:.2f}s")

            start = time.time()
            st.write("‚è≥ Fetching price...")
            price = get_price(token.upper())
            st.write(f"‚úÖ Price fetched in {time.time() - start:.2f}s")

            start = time.time()
            st.write("‚è≥ Fetching market data...")
            market_data = get_market_data(token.lower())
            st.write(f"‚úÖ Market data fetched in {time.time() - start:.2f}s")

            start = time.time()
            st.write("‚è≥ Generating response from Ollama...")
            prompt = (
                f"News:\n{news}\n\n"
                f"Price:\n{price}\n\n"
                f"Market data:\n{market_data}\n\n"
                f"Token: {token}\n\n"
                "–†–∞—Å—Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ."
            )
            response = generate_response(prompt)
            st.write(f"‚úÖ Response generated in {time.time() - start:.2f}s")

            st.success(response)

        except Exception as e:
            st.error(f"‚ùå Error fetching data: {e}")

def main():
    prompt = "–ß—Ç–æ —Ç—ã –∑–Ω–∞–µ—à—å –æ –±–∏—Ç–∫–æ–∏–Ω–µ?"
    answer = generate_response(prompt)
    print("–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:", answer)

if __name__ == "__main__":
    main()
